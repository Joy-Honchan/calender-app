{"version":3,"file":"static/js/500.acae130d.chunk.js","mappings":"6QAsFMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAc,gBAAGE,EAAK,EAALA,MAAK,MAAQ,CAC/CC,OAAQD,EAAME,QAAQ,EAAG,EAAG,EAAG,GAC/B,YAAa,CACXC,QAAS,OACTC,oBAAqB,iBACrBC,IAAKL,EAAME,QAAQ,GACnB,mBAAoB,CAClBI,aAAa,GAAD,OAAKN,EAAME,QAAQ,GAAE,YAAIF,EAAME,QAAQ,GAAE,QACrDK,gBAAiBP,EAAMQ,QAAQC,QAAQC,KACvCC,MAAOX,EAAMQ,QAAQC,QAAQG,cAK/B,mBAAoB,CAClBC,UAAWb,EAAME,QAAQ,KAM7B,YAAa,CACXY,QAAQ,GAAD,OAAKd,EAAME,QAAQ,GAAE,MAC5Ba,SAAU,OACV,kBAAmB,CACjBC,WAAYhB,EAAMiB,WAAWC,iBAC7BC,UAAW,UAEb,kBAAmB,CACjBA,UAAW,SACX,cAAe,CACbZ,gBAAiBP,EAAMQ,QAAQC,QAAQW,OAEzC,oBAAqB,CACnBT,MAAOX,EAAMQ,QAAQa,KAAK,OAG9B,cAAe,CACbC,OAAQ,IAYb,IAED,EAhIqB,SAAH,GAA6D,IAAvDC,EAAY,EAAZA,aAChBC,GAAyBC,EAAAA,EAAAA,UAAQ,WACrC,IAAMC,EAA+B,CACnCC,YAAa,EACbC,UAAW,EACXC,UAAU,EACVC,OAAQ,IAENC,EAA+B,GAC/BC,EAA6B,GAuBjC,OArBAT,EAAaU,SAAQ,SAACC,EAAWC,GAC/B,GAAc,IAAVA,GAAuC,IAAxBD,EAAUN,UAC3B,IAAK,IAAIQ,EAAI,EAAGA,EAAIF,EAAUN,UAAWQ,IACvCJ,EAAUK,MAAK,kBAAKX,GAAa,IAAEE,UAAWQ,KAIlD,GADAJ,EAAUK,KAAKH,GACa,IAAxBA,EAAUN,UACZG,EAAUM,KAAKL,GACfA,EAAY,QACP,GACLT,EAAae,SAAWH,EAAQ,GACR,IAAxBD,EAAUN,UACV,CACA,IAAK,IAAIQ,EAAIF,EAAUN,UAAY,EAAGQ,GAAK,EAAGA,IAC5CJ,EAAUK,MAAK,kBAAKX,GAAa,IAAEE,UAAWQ,KAEhDL,EAAUM,KAAKL,GACfA,EAAY,EACd,CACF,IACOD,CACT,GAAG,CAACR,IAEJ,OACE,UAAC1B,EAAU,YACT,UAAC0C,EAAA,EAAG,CAACC,UAAU,0BAAyB,WACtC,SAACD,EAAA,EAAG,CAACC,UAAU,yBAAwB,SAAC,YACxC,SAACD,EAAA,EAAG,CAACC,UAAU,yBAAwB,SAAC,YACxC,SAACD,EAAA,EAAG,CAACC,UAAU,yBAAwB,SAAC,YACxC,SAACD,EAAA,EAAG,CAACC,UAAU,yBAAwB,SAAC,YACxC,SAACD,EAAA,EAAG,CAACC,UAAU,yBAAwB,SAAC,YACxC,SAACD,EAAA,EAAG,CAACC,UAAU,yBAAwB,SAAC,YACxC,SAACD,EAAA,EAAG,CAACC,UAAU,yBAAwB,SAAC,cAEzChB,EAAuBiB,KAAI,SAACT,EAAWG,GAAK,OAC3C,SAACI,EAAA,EAAG,CAAsBC,UAAU,0BAAyB,SAC1DR,EAAUS,KAAI,SAACP,EAAWC,GACzB,OAAiC,IAA1BD,EAAUP,aACf,UAACY,EAAA,EAAG,CACFC,UAAS,iCACPN,EAAUL,SAAW,YAAc,MAClC,WAGH,SAACa,EAAA,EAAU,CAACC,QAAQ,KAAKH,UAAU,cAAa,SAC7CN,EAAUP,eAEb,SAACe,EAAA,EAAU,CAACC,QAAQ,UAAUH,UAAU,cAAa,SAClDN,EAAUJ,QAAU,SACV,oBAPKK,KAUpB,SAACI,EAAA,EAAG,CACFC,UAAU,oCAAkC,oBAC1BL,GAGxB,KAtBQ,OAASA,EAuBb,MAId,E,kBClFMS,EAAmC,CACvCC,SAAG,EACHC,SAAG,EACHC,SAAG,EACHC,SAAG,EACHC,SAAG,EACHC,SAAG,EACHC,SAAG,GCkDCC,GAAetD,EAAAA,EAAAA,IAAOyC,EAAAA,EAAPzC,EAAY,gBAAGE,EAAK,EAALA,MAAK,MAAQ,CAC/Cc,QAAQ,GAAD,OAAKd,EAAME,QAAQ,GAAE,YAAIF,EAAME,QAAQ,GAAE,cAAMF,EAAME,QAAQ,IACpE,0BAA2B,CACzBY,QAASd,EAAME,QAAQ,IAAK,EAAG,IAAK,GACpCiB,UAAW,SACX,oBAAqB,CACnBhB,QAAS,iBAIb,4BAA6B,CAC3BkD,SAAU,SAEb,IACD,EAlEqB,WACnB,IAAMC,EAAUC,MAChB,GAAsCC,EAAAA,EAAAA,UAAwB,MAAK,eAA5DC,EAAW,KAAEC,EAAc,MAClCC,EAAAA,EAAAA,YAAU,WACRD,EAAeJ,EAAQM,IAAI,SAAW,EACxC,GAAG,IAEH,IAIMrC,GAAeE,EAAAA,EAAAA,UAAQ,WAC3B,OAAOgC,EDPwB,SAACI,GAClC,IAAMC,EAAcD,EAAQ,GAAE,WAAOA,GAAK,UAAQA,GAClD,OAAOE,EAAAA,QACG,SAACC,GAAI,OAAKA,EAAKC,yBAAKC,WAAW,OAAD,OAAQJ,GAAc,IAC3DrB,KAAI,SAACuB,GAAI,MAAM,CACdrC,YAAawC,OAAOH,EAAKC,yBAAKG,MAAM,EAAG,IACvCxC,UAAWgB,EAAQoB,EAAKK,cACxBxC,SAAUyC,QAAsB,MAAdN,EAAKO,0BACvBzC,OAAQkC,EAAKQ,aACd,GACL,CCHyBC,CAAoBhB,GAAe,EAC1D,GAAG,CAACA,IAEJ,OACE,UAACL,EAAY,YACX,SAAC,IAAe,CAACsB,YAAa,IAC7BjB,GACC,iCACE,SAAClB,EAAA,EAAG,CAACC,UAAU,yBAAwB,UACrC,UAACE,EAAA,EAAU,CAACC,QAAQ,KAAI,UAAC,4CAEvB,SAACgC,EAAA,EAAU,CACTnC,UAAU,mBACV7B,MAAM,UACNiE,MAAO,GACPC,KAAMpB,EACNqB,SArBO,SAACC,EAA6BC,GACjDtB,EAAesB,EACjB,UAoCQ,SAAC,EAAY,CAACzD,aAAcA,OAE5B,OAGV,C,8FCpDM0D,GAAoBC,EAAAA,EAAAA,OACxB,kBAAM,oDAA2C,IAE7CC,GAAeD,EAAAA,EAAAA,OAAK,kBAAM,qDAAsC,IAChEE,GAAWF,EAAAA,EAAAA,OAAK,kBAAM,qDAAkC,IAExDG,EAAc,WAAH,OACf,SAAC,KAAI,CAACC,GAAI,YAAY,UACpB,SAAC,IAAM,CACL3C,QAAQ,YACRhC,MAAM,YACN4E,WAAW,SAAC,EAAAC,EAAmB,CAACC,WAAW,SAACR,EAAiB,MAAQ,SACtE,oCAGI,EAGHS,EAAW,WAAH,OACZ,SAAC,KAAI,CAACJ,GAAI,SAAS,UACjB,SAAC,IAAM,CACL3C,QAAQ,YACRhC,MAAM,YACN4E,WAAW,SAAC,EAAAC,EAAmB,CAACC,WAAW,SAACN,EAAY,MAAQ,SACjE,oCAGI,EAGHQ,EAAU,WAAH,OACX,SAAC,KAAI,CAACL,GAAI,IAAI,UACZ,SAAC,IAAM,CACL3C,QAAQ,YACRhC,MAAM,YACN4E,WAAW,SAAC,EAAAC,EAAmB,CAACC,WAAW,SAACL,EAAQ,MAAQ,SAC7D,8BAGI,EA0BHhC,GAAetD,EAAAA,EAAAA,IAAOyC,EAAAA,EAAPzC,EAAY,YAAQ,MAAQ,CAC/C8F,SAAU,QACVzF,QAAS,OACT0F,eAAgB,eAChBC,OAAQ,CACNnF,MAAO,QACP,UAAW,CACTA,MAPmC,EAALX,MAOjBQ,QAAQa,KAAK,OAG9B0E,EAAG,CACDC,eAAgB,QAEnB,IACD,IArCwB,SAAH,GAAkD,IAA5CtB,EAAW,EAAXA,YACzB,OACE,SAACtB,EAAY,UACM,IAAhBsB,GACC,iCACE,SAACiB,EAAO,KACR,SAACN,EAAW,OAEI,IAAhBX,GACF,iCACE,SAACiB,EAAO,KACR,SAACD,EAAQ,QAGX,iCACE,SAACL,EAAW,KACZ,SAACK,EAAQ,QAKnB,C","sources":["components/CalenderPage/calenderGrid.tsx","utils/generateDates.ts","components/CalenderPage/index.tsx","components/UI/NavigateButtons.tsx"],"sourcesContent":["import { useMemo, lazy, MouseEvent, useState } from \"react\";\r\nimport { styled, Box, Paper, Typography, IconButton } from \"@mui/material\";\r\n\r\ninterface DailyDataType {\r\n  dateInMonth: number;\r\n  dayInWeek: number;\r\n  isDayOff: boolean;\r\n  remark: string;\r\n}\r\n\r\nconst CalenderGrid = ({ calenderData }: { calenderData: DailyDataType[] }) => {\r\n  const proccessedCalenderData = useMemo(() => {\r\n    const emptyCellData: DailyDataType = {\r\n      dateInMonth: 0,\r\n      dayInWeek: 0,\r\n      isDayOff: false,\r\n      remark: \"\",\r\n    };\r\n    let tablebody: DailyDataType[][] = [];\r\n    let weeklyRow: DailyDataType[] = [];\r\n\r\n    calenderData.forEach((dailyData, index) => {\r\n      if (index === 0 && dailyData.dayInWeek !== 0) {\r\n        for (let i = 0; i < dailyData.dayInWeek; i++) {\r\n          weeklyRow.push({ ...emptyCellData, dayInWeek: i });\r\n        }\r\n      }\r\n      weeklyRow.push(dailyData);\r\n      if (dailyData.dayInWeek === 6) {\r\n        tablebody.push(weeklyRow);\r\n        weeklyRow = [];\r\n      } else if (\r\n        calenderData.length === index + 1 &&\r\n        dailyData.dayInWeek !== 6\r\n      ) {\r\n        for (let i = dailyData.dayInWeek + 1; i <= 6; i++) {\r\n          weeklyRow.push({ ...emptyCellData, dayInWeek: i });\r\n        }\r\n        tablebody.push(weeklyRow);\r\n        weeklyRow = [];\r\n      }\r\n    });\r\n    return tablebody;\r\n  }, [calenderData]);\r\n\r\n  return (\r\n    <StyledGrid>\r\n      <Box className=\"grid-row weeks-head-row\">\r\n        <Box className=\"col-cell week-head-col\">日</Box>\r\n        <Box className=\"col-cell week-head-col\">一</Box>\r\n        <Box className=\"col-cell week-head-col\">二</Box>\r\n        <Box className=\"col-cell week-head-col\">三</Box>\r\n        <Box className=\"col-cell week-head-col\">四</Box>\r\n        <Box className=\"col-cell week-head-col\">五</Box>\r\n        <Box className=\"col-cell week-head-col\">六</Box>\r\n      </Box>\r\n      {proccessedCalenderData.map((weeklyRow, index) => (\r\n        <Box key={`week` + index} className=\"grid-row weeks-body-row\">\r\n          {weeklyRow.map((dailyData, index) => {\r\n            return dailyData.dateInMonth !== 0 ? (\r\n              <Box\r\n                className={`col-cell week-body-col ${\r\n                  dailyData.isDayOff ? \"is-dayoff\" : null\r\n                }`}\r\n                key={`dailyCell+${index}`}\r\n              >\r\n                <Typography variant=\"h5\" className=\"date-number\">\r\n                  {dailyData.dateInMonth}\r\n                </Typography>\r\n                <Typography variant=\"caption\" className=\"date-remark\">\r\n                  {dailyData.remark || \"--\"}\r\n                </Typography>\r\n              </Box>\r\n            ) : (\r\n              <Box\r\n                className=\"col-cell week-body-col empty-col\"\r\n                key={`dailyCell+${index}`}\r\n              ></Box>\r\n            );\r\n          })}\r\n        </Box>\r\n      ))}\r\n    </StyledGrid>\r\n  );\r\n};\r\n\r\nconst StyledGrid = styled(Paper)(({ theme }) => ({\r\n  margin: theme.spacing(0, 1, 0, 1),\r\n  \".grid-row\": {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(7, 1fr)\",\r\n    gap: theme.spacing(1),\r\n    \"&.weeks-head-row\": {\r\n      borderRadius: `${theme.spacing(1)} ${theme.spacing(1)} 0 0`,\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: theme.palette.primary.contrastText,\r\n      // borderBottom: `${theme.spacing(0.5)} solid ${\r\n      //   theme.palette.primary.light\r\n      // }`,\r\n    },\r\n    \"&.weeks-body-row\": {\r\n      marginTop: theme.spacing(1),\r\n      // \"&:not(:last-child)\": {\r\n      //   marginBottom: theme.spacing(1),\r\n      // },\r\n    },\r\n  },\r\n  \".col-cell\": {\r\n    padding: `${theme.spacing(1)} 0`,\r\n    fontSize: \"1rem\",\r\n    \"&.week-head-col\": {\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      textAlign: \"center\",\r\n    },\r\n    \"&.week-body-col\": {\r\n      textAlign: \"center\",\r\n      \"&.is-dayoff\": {\r\n        backgroundColor: theme.palette.primary.light,\r\n      },\r\n      \"&:not(.is-dayoff)\": {\r\n        color: theme.palette.grey[600],\r\n      },\r\n    },\r\n    \"&.empty-col\": {\r\n      border: 0,\r\n    },\r\n  },\r\n  //width < 600px\r\n  // [theme.breakpoints.down(\"sm\")]: {\r\n  //   backgroundColor: \"green\",\r\n  //   \".grid-row\": {\r\n  //     \"&.weeks-body-row\": {\r\n  //       minHeight: 0,\r\n  //     },\r\n  //   },\r\n  // },\r\n}));\r\n\r\nexport default CalenderGrid;\r\n","import officialCalenderData from \"data/official-calender-data.json\";\r\n\r\nconst weekObj: { [x: string]: number } = {\r\n  日: 0,\r\n  一: 1,\r\n  二: 2,\r\n  三: 3,\r\n  四: 4,\r\n  五: 5,\r\n  六: 6,\r\n};\r\n\r\nexport const getEveryDateInMonth = (month: number) => {\r\n  const monthString = month < 10 ? `0${month}` : `${month}`;\r\n  return officialCalenderData\r\n    .filter((item) => item.西元日期.startsWith(`2023${monthString}`))\r\n    .map((item) => ({\r\n      dateInMonth: Number(item.西元日期.slice(6, 8)),\r\n      dayInWeek: weekObj[item.星期],\r\n      isDayOff: Boolean(item.是否放假 === \"2\"),\r\n      remark: item.備註,\r\n    }));\r\n};\r\n","import { useState, useEffect, ChangeEvent, useMemo } from \"react\";\r\nimport { styled, Box, Typography, Pagination } from \"@mui/material\";\r\nimport dayjs from \"dayjs\";\r\nimport CalenderGrid from \"components/CalenderPage/calenderGrid\";\r\nimport NavigateButtoms from \"components/UI/NavigateButtons\";\r\nimport { getEveryDateInMonth } from \"utils/generateDates\";\r\n\r\nconst CalenderPage = () => {\r\n  const nowTime = dayjs();\r\n  const [chosenMonth, setChosenMonth] = useState<number | null>(null);\r\n  useEffect(() => {\r\n    setChosenMonth(nowTime.get(\"month\") + 1);\r\n  }, []);\r\n\r\n  const handleChange = (event: ChangeEvent<unknown>, value: number) => {\r\n    setChosenMonth(value);\r\n  };\r\n\r\n  const calenderData = useMemo(() => {\r\n    return chosenMonth ? getEveryDateInMonth(chosenMonth) : [];\r\n  }, [chosenMonth]);\r\n\r\n  return (\r\n    <StyleWrapper>\r\n      <NavigateButtoms currentPage={1} />\r\n      {chosenMonth ? (\r\n        <>\r\n          <Box className=\"choose-month-container\">\r\n            <Typography variant=\"h6\">\r\n              請選擇2023月份：\r\n              <Pagination\r\n                className=\"month-pagination\"\r\n                color=\"primary\"\r\n                count={12}\r\n                page={chosenMonth}\r\n                onChange={handleChange}\r\n              />\r\n            </Typography>\r\n\r\n            {/* <TextField\r\n          label={\"選擇月份\"}\r\n          type=\"month\"\r\n          defaultValue={nowTime.format(\"YYYY-MM\")}\r\n          size=\"small\"\r\n          sx={{ width: 150 }}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            min: \"2023-01\",\r\n            max: \"2023-12\",\r\n          }}\r\n        /> */}\r\n          </Box>\r\n          <CalenderGrid calenderData={calenderData} />\r\n        </>\r\n      ) : null}\r\n    </StyleWrapper>\r\n  );\r\n};\r\n\r\nconst StyleWrapper = styled(Box)(({ theme }) => ({\r\n  padding: `${theme.spacing(2)} ${theme.spacing(2)} 0 ${theme.spacing(2)}`,\r\n  \".choose-month-container\": {\r\n    padding: theme.spacing(1.5, 0, 1.5, 0),\r\n    textAlign: \"center\",\r\n    \".month-pagination\": {\r\n      display: \"inline-block\",\r\n    },\r\n  },\r\n\r\n  \".calender-chart-container\": {\r\n    minWidth: \"600px\",\r\n  },\r\n}));\r\nexport default CalenderPage;\r\n","import { lazy } from \"react\";\r\nimport { styled, Box, Button } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IconSuspenseWrapper } from \"components/UI/SuspenseWrapper\";\r\n\r\nconst CalendarMonthIcon = lazy(\r\n  () => import(\"@mui/icons-material/CalendarMonth\")\r\n);\r\nconst BarChartIcon = lazy(() => import(\"@mui/icons-material/BarChart\"));\r\nconst HomeIcon = lazy(() => import(\"@mui/icons-material/Home\"));\r\n\r\nconst CalenderBtn = () => (\r\n  <Link to={\"/calender\"}>\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      startIcon={<IconSuspenseWrapper component={<CalendarMonthIcon />} />}\r\n    >\r\n      前往行事曆\r\n    </Button>\r\n  </Link>\r\n);\r\n\r\nconst ChartBtn = () => (\r\n  <Link to={\"/chart\"}>\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      startIcon={<IconSuspenseWrapper component={<BarChartIcon />} />}\r\n    >\r\n      前往統計表\r\n    </Button>\r\n  </Link>\r\n);\r\n\r\nconst HomeBtn = () => (\r\n  <Link to={\"/\"}>\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      startIcon={<IconSuspenseWrapper component={<HomeIcon />} />}\r\n    >\r\n      回到首頁\r\n    </Button>\r\n  </Link>\r\n);\r\n\r\nconst NavigateButtoms = ({ currentPage }: { currentPage: number }) => {\r\n  return (\r\n    <StyleWrapper>\r\n      {currentPage === 2 ? (\r\n        <>\r\n          <HomeBtn />\r\n          <CalenderBtn />\r\n        </>\r\n      ) : currentPage === 1 ? (\r\n        <>\r\n          <HomeBtn />\r\n          <ChartBtn />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <CalenderBtn />\r\n          <ChartBtn />\r\n        </>\r\n      )}\r\n    </StyleWrapper>\r\n  );\r\n};\r\n\r\nconst StyleWrapper = styled(Box)(({ theme }) => ({\r\n  maxWidth: \"300px\",\r\n  display: \"flex\",\r\n  justifyContent: \"space-around\",\r\n  button: {\r\n    color: \"black\",\r\n    \"&:hover\": {\r\n      color: theme.palette.grey[200],\r\n    },\r\n  },\r\n  a: {\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\nexport default NavigateButtoms;\r\n"],"names":["StyledGrid","styled","Paper","theme","margin","spacing","display","gridTemplateColumns","gap","borderRadius","backgroundColor","palette","primary","main","color","contrastText","marginTop","padding","fontSize","fontWeight","typography","fontWeightMedium","textAlign","light","grey","border","calenderData","proccessedCalenderData","useMemo","emptyCellData","dateInMonth","dayInWeek","isDayOff","remark","tablebody","weeklyRow","forEach","dailyData","index","i","push","length","Box","className","map","Typography","variant","weekObj","日","一","二","三","四","五","六","StyleWrapper","minWidth","nowTime","dayjs","useState","chosenMonth","setChosenMonth","useEffect","get","month","monthString","officialCalenderData","item","西元日期","startsWith","Number","slice","星期","Boolean","是否放假","備註","getEveryDateInMonth","currentPage","Pagination","count","page","onChange","event","value","CalendarMonthIcon","lazy","BarChartIcon","HomeIcon","CalenderBtn","to","startIcon","I","component","ChartBtn","HomeBtn","maxWidth","justifyContent","button","a","textDecoration"],"sourceRoot":""}