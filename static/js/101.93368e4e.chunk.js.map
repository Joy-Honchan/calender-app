{"version":3,"file":"static/js/101.93368e4e.chunk.js","mappings":"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","sources":["components/ChartPage/BarChart.tsx","utils/generateChartData.ts","components/ChartPage/index.tsx","components/UI/NavigateButtons.tsx"],"sourcesContent":["import {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ChartOptions,\r\n} from \"chart.js\";\r\nimport annotationPlugin, { AnnotationOptions } from \"chartjs-plugin-annotation\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { getMonthlyData } from \"utils/generateChartData\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  annotationPlugin\r\n);\r\n\r\ninterface AnnotationsType {\r\n  annotation?: {\r\n    annotations: {\r\n      topWorkday: AnnotationOptions<\"label\">;\r\n      topDayoff: AnnotationOptions<\"label\">;\r\n    };\r\n  };\r\n}\r\n\r\nconst labels = [\r\n  \"‰∏ÄÊúà\",\r\n  \"‰∫åÊúà\",\r\n  \"‰∏âÊúà\",\r\n  \"ÂõõÊúà\",\r\n  \"‰∫îÊúà\",\r\n  \"ÂÖ≠Êúà\",\r\n  \"‰∏ÉÊúà\",\r\n  \"ÂÖ´Êúà\",\r\n  \"‰πùÊúà\",\r\n  \"ÂçÅÊúà\",\r\n  \"ÂçÅ‰∏ÄÊúà\",\r\n  \"ÂçÅ‰∫åÊúà\",\r\n];\r\n\r\nconst BarChart = () => {\r\n  const { workDayData, dayOffData } = getMonthlyData();\r\n\r\n  const annotationPosints = (dataType: \"workDayData\" | \"dayOffData\") => {\r\n    const sourceData = dataType === \"workDayData\" ? workDayData : dayOffData;\r\n    const topindex = sourceData.findIndex(\r\n      (item, _, self) => item === Math.max(...self)\r\n    );\r\n    return {\r\n      yValue: sourceData[topindex],\r\n      xValue: labels[topindex],\r\n    };\r\n  };\r\n\r\n  const options: ChartOptions<\"bar\"> & AnnotationsType = {\r\n    scales: {\r\n      y: {\r\n        max: 30,\r\n      },\r\n    },\r\n    // responsive: true,\r\n    aspectRatio: 2.5,\r\n    // maintainAspectRatio: false,\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: \"2023Âπ¥‰∏äÁè≠ÂèäÊîæÂÅáÂ§©Êï∏Áµ±Ë®à\",\r\n        font: { size: 20 },\r\n      },\r\n      legend: {\r\n        onClick: () => {\r\n          return;\r\n        },\r\n        position: \"top\" as const,\r\n      },\r\n      annotation: {\r\n        annotations: {\r\n          topWorkday: {\r\n            type: \"label\",\r\n            content: `üëë Â∑•‰ΩúÊó•:${annotationPosints(\"workDayData\").yValue}Â§©`,\r\n            backgroundColor: \"rgba(255, 75, 41, 0.4)\",\r\n            font: { size: 12 },\r\n            yAdjust: -15,\r\n            xAdjust: -15,\r\n            borderWidth: 1,\r\n            yValue: annotationPosints(\"workDayData\").yValue,\r\n            xValue: annotationPosints(\"workDayData\").xValue,\r\n          },\r\n          topDayoff: {\r\n            type: \"label\",\r\n            content: `üëë ÊîæÂÅáÊó•:${annotationPosints(\"dayOffData\").yValue}Â§©`,\r\n            backgroundColor: \"rgba(25, 123, 189, 0.4)\",\r\n            font: { size: 12 },\r\n            yAdjust: -15,\r\n            xAdjust: 15,\r\n            borderWidth: 1,\r\n            yValue: annotationPosints(\"dayOffData\").yValue,\r\n            xValue: annotationPosints(\"dayOffData\").xValue,\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n  const chartConfig = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"‰∏äÁè≠Â§©Êï∏\",\r\n        data: workDayData,\r\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n      },\r\n      {\r\n        label: \"ÊîæÂÅáÂ§©Êï∏\",\r\n        data: dayOffData,\r\n        backgroundColor: \"rgba(53, 162, 235, 0.5)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Bar data={chartConfig} options={options} />;\r\n};\r\n\r\nexport default BarChart;\r\n","import officialCalenderData from \"data/official-calender-data.json\";\r\n\r\nexport const getMonthlyData = () => {\r\n  let workDays = Array.from({ length: 12 }, () => 0);\r\n  let dayOffs = Array.from({ length: 12 }, () => 0);\r\n  officialCalenderData.forEach(({ Ë•øÂÖÉÊó•Êúü: date, ÊòØÂê¶ÊîæÂÅá: isDayOff }) => {\r\n    const monthIndex = Number(date.slice(4, 6)) - 1;\r\n    isDayOff === \"0\" ? (workDays[monthIndex] += 1) : (dayOffs[monthIndex] += 1);\r\n  });\r\n  return { workDayData: workDays, dayOffData: dayOffs };\r\n};\r\n","import { styled, Box } from \"@mui/material\";\r\nimport NavigateButtoms from \"components/UI/NavigateButtons\";\r\nimport BarChart from \"./BarChart\";\r\nconst ChartPage = () => {\r\n  return (\r\n    <StyleWrapper>\r\n      <NavigateButtoms currentPage={2} />\r\n      <Box className=\"container-scroller\">\r\n        <Box className=\"barchart-container\">\r\n          <BarChart />\r\n        </Box>\r\n      </Box>\r\n    </StyleWrapper>\r\n  );\r\n};\r\nconst StyleWrapper = styled(Box)(({ theme }) => ({\r\n  display: \"flex\",\r\n  flexFlow: \"column nowrap\",\r\n  maxHeight: \"100vh\",\r\n  padding: theme.spacing(2),\r\n  // padding: `${theme.spacing(2)} ${theme.spacing(2)} 0 ${theme.spacing(2)}`,\r\n  \".container-scroller\": {\r\n    padding: theme.spacing(0, 1),\r\n    overflowX: \"auto\",\r\n    overflowY: \"auto\",\r\n    position: \"relative\",\r\n    \".barchart-container\": {\r\n      minWidth: \"800px\",\r\n    },\r\n  },\r\n}));\r\nexport default ChartPage;\r\n","import { lazy } from \"react\";\r\nimport { styled, Box, Button } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IconSuspenseWrapper } from \"components/UI/SuspenseWrapper\";\r\n\r\nconst CalendarMonthIcon = lazy(\r\n  () => import(\"@mui/icons-material/CalendarMonth\")\r\n);\r\nconst BarChartIcon = lazy(() => import(\"@mui/icons-material/BarChart\"));\r\nconst HomeIcon = lazy(() => import(\"@mui/icons-material/Home\"));\r\n\r\nconst CalenderBtn = () => (\r\n  <Link to={\"/calender\"}>\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      startIcon={<IconSuspenseWrapper component={<CalendarMonthIcon />} />}\r\n    >\r\n      ÂâçÂæÄË°å‰∫ãÊõÜ\r\n    </Button>\r\n  </Link>\r\n);\r\n\r\nconst ChartBtn = () => (\r\n  <Link to={\"/chart\"}>\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      startIcon={<IconSuspenseWrapper component={<BarChartIcon />} />}\r\n    >\r\n      ÂâçÂæÄÁµ±Ë®àË°®\r\n    </Button>\r\n  </Link>\r\n);\r\n\r\nconst HomeBtn = () => (\r\n  <Link to={\"/\"}>\r\n    <Button\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      startIcon={<IconSuspenseWrapper component={<HomeIcon />} />}\r\n    >\r\n      ÂõûÂà∞È¶ñÈ†Å\r\n    </Button>\r\n  </Link>\r\n);\r\n\r\nconst NavigateButtoms = ({ currentPage }: { currentPage: number }) => {\r\n  return (\r\n    <StyleWrapper>\r\n      {currentPage === 2 ? (\r\n        <>\r\n          <HomeBtn />\r\n          <CalenderBtn />\r\n        </>\r\n      ) : currentPage === 1 ? (\r\n        <>\r\n          <HomeBtn />\r\n          <ChartBtn />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <CalenderBtn />\r\n          <ChartBtn />\r\n        </>\r\n      )}\r\n    </StyleWrapper>\r\n  );\r\n};\r\n\r\nconst StyleWrapper = styled(Box)(({ theme }) => ({\r\n  maxWidth: \"300px\",\r\n  display: \"flex\",\r\n  justifyContent: \"space-around\",\r\n  button: {\r\n    color: \"black\",\r\n    \"&:hover\": {\r\n      color: theme.palette.grey[200],\r\n    },\r\n  },\r\n  a: {\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\nexport default NavigateButtoms;\r\n"],"names":["ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","annotationPlugin","labels","workDays","Array","from","length","dayOffs","officialCalenderData","date","Ë•øÂÖÉÊó•Êúü","isDayOff","ÊòØÂê¶ÊîæÂÅá","monthIndex","Number","slice","workDayData","dayOffData","getMonthlyData","annotationPosints","dataType","sourceData","topindex","findIndex","item","_","self","Math","max","yValue","xValue","options","scales","y","aspectRatio","plugins","title","display","text","font","size","legend","onClick","position","annotation","annotations","topWorkday","type","content","backgroundColor","yAdjust","xAdjust","borderWidth","topDayoff","chartConfig","datasets","label","data","StyleWrapper","styled","Box","theme","flexFlow","maxHeight","padding","spacing","overflowX","overflowY","minWidth","currentPage","className","CalendarMonthIcon","lazy","BarChartIcon","HomeIcon","CalenderBtn","to","variant","color","startIcon","I","component","ChartBtn","HomeBtn","maxWidth","justifyContent","button","palette","grey","a","textDecoration"],"sourceRoot":""}